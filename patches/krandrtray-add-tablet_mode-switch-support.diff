--- kdebase/kcontrol/randr/krandrapp.cpp	2005-10-10 17:03:49.000000000 +0200
+++ kdebase/kcontrol/randr/krandrapp.cpp	2007-10-18 12:52:58.000000000 +0200
@@ -22,12 +22,15 @@
 #include "krandrapp.moc"
 
 #include "krandrtray.h"
+#include "krandrdbus.h"
 
 #include <X11/Xlib.h>
 
 KRandRApp::KRandRApp()
 	: m_tray(new KRandRSystemTray(0L, "RANDRTray"))
+	, m_dbus(new KRandRDBus(m_tray))
 {
+	m_dbus->init();
 	m_tray->show();
 }
 
--- kdebase/kcontrol/randr/krandrapp.h	2005-10-10 17:03:49.000000000 +0200
+++ kdebase/kcontrol/randr/krandrapp.h	2007-10-18 12:52:58.000000000 +0200
@@ -22,6 +22,7 @@
 #include <kuniqueapplication.h>
 
 class KRandRSystemTray;
+class KRandRDBus;
 
 class KRandRApp : public KUniqueApplication
 {
@@ -34,6 +35,7 @@
 
 private:
 	KRandRSystemTray*	m_tray;
+	KRandRDBus*		m_dbus;
 };
 
 #endif
--- kdebase/kcontrol/randr/krandrdbus.cpp	1970-01-01 01:00:00.000000000 +0100
+++ kdebase/kcontrol/randr/krandrdbus.cpp	2007-10-18 12:57:52.000000000 +0200
@@ -0,0 +1,126 @@
+#include "krandrdbus.h"
+#include <dbus/dbus.h>
+#include <kdebug.h>
+#include "randr.h"
+
+
+static KRandRDBus *s_instance;
+
+KRandRDBus::KRandRDBus(QObject *parent)
+	: QObject()
+	, m_halContext(NULL)
+	, m_parent(parent)
+{
+	s_instance = this;
+	if(m_parent)
+		connect(s_instance, SIGNAL(orientationChanged(int)),
+			m_parent, SLOT(slotChangeOrientation(int)));
+}
+
+KRandRDBus::~KRandRDBus()
+{
+	if(!m_halContext)
+		return;
+
+	libhal_ctx_free(m_halContext);
+}
+
+bool KRandRDBus::init()
+{
+	int count;
+	char **devices;
+	DBusError error;
+
+	m_halContext = libhal_ctx_new();
+	if(!m_halContext)
+		return false;
+
+	dbus_error_init(&error);
+
+	m_dbusConnection = dbus_bus_get_private(DBUS_BUS_SYSTEM, &error);
+	if(!m_dbusConnection || dbus_error_is_set(&error))
+		goto error_dbg;
+
+	dbus_connection_set_exit_on_disconnect(m_dbusConnection, FALSE);
+
+	m_dBusQtConnection = new DBusQt::Connection(this);	// <-- m_parent
+	m_dBusQtConnection->dbus_connection_setup_with_qt_main(m_dbusConnection);
+
+	libhal_ctx_set_dbus_connection(m_halContext, m_dbusConnection);
+
+	libhal_ctx_init(m_halContext, &error);
+	if(dbus_error_is_set(&error))
+		goto error_dbg;
+
+	devices = libhal_find_device_by_capability(m_halContext, "input.switch", &count, &error);
+	if(dbus_error_is_set(&error))
+		goto error_dbg;
+	if((devices == NULL) || (count <= 0))
+		goto error;
+
+	while(count-- && devices[count]) {
+		char *type = libhal_device_get_property_string(m_halContext, devices[count], "button.type", &error);
+		if(!type)
+			continue;
+
+		if(dbus_error_is_set(&error)) {
+			libhal_free_string(type);
+			continue;
+		}
+
+		if(!strcmp("tablet_mode", type)) {
+			m_swTabletMode.fromAscii(devices[count]);
+			libhal_free_string(type);
+			break;
+		}
+
+		libhal_free_string(type);
+	}
+	libhal_free_string_array(devices);
+
+	if(m_swTabletMode.isEmpty())
+		return false;
+
+	libhal_ctx_set_device_property_modified (m_halContext, KRandRDBus::hal_device_property_modified);
+	libhal_device_add_property_watch(m_halContext, m_swTabletMode.ascii(), &error);
+	if(dbus_error_is_set(&error))
+		goto error_dbg;
+
+	return true;
+
+ error_dbg:
+	kdDebug(0) << "DBUS Error: " << error.message << endl;
+ error:
+	libhal_ctx_free(m_halContext);
+	dbus_error_free(&error);
+	return false;
+}
+
+bool KRandRDBus::swTabletMode()
+{
+	DBusError error;
+	dbus_error_init(&error);
+
+	dbus_bool_t mode = libhal_device_get_property_bool(m_halContext, m_swTabletMode.ascii(), "button.state.value", &error);
+	if(dbus_error_is_set(&error))
+		kdDebug(0) << "DBUS Error: " << error.message << endl;
+
+	return (mode == TRUE);
+}
+
+void KRandRDBus::hal_device_property_modified(LibHalContext *ctx, const char *udi, const char *key,
+		dbus_bool_t is_removed, dbus_bool_t is_added)
+{
+	Q_UNUSED(ctx);
+	Q_UNUSED(udi);
+	Q_UNUSED(is_removed);
+	Q_UNUSED(is_added);
+
+	if(!strcmp("button.state.value", key))
+		emit s_instance->orientationChanged(
+				s_instance->swTabletMode()
+					? RandRScreen::Rotate270
+					: RandRScreen::Rotate0);
+}
+
+#include "krandrdbus.moc"
--- kdebase/kcontrol/randr/krandrdbus.h	1970-01-01 01:00:00.000000000 +0100
+++ kdebase/kcontrol/randr/krandrdbus.h	2007-10-18 12:57:52.000000000 +0200
@@ -0,0 +1,42 @@
+#ifndef __RANDRDBUS_H__
+#define __RANDRDBUS_H__
+
+#include <qobject.h>
+#include <qstring.h>
+
+#define DBUS_API_SUBJECT_TO_CHANGE
+#include <dbus/connection.h>
+#include <dbus/dbus-qt.h>
+#include <hal/libhal.h>
+
+
+class KRandRDBus : public QObject
+{
+	Q_OBJECT
+
+public:
+	KRandRDBus(QObject *parent);
+	~KRandRDBus();
+
+	bool init();
+	bool swTabletMode();
+
+private:
+	static void hal_device_property_modified(LibHalContext *ctx, const char *udi, const char *key,
+			dbus_bool_t is_removed, dbus_bool_t is_added);
+
+signals:
+	void orientationChanged(int);
+
+private:
+	LibHalContext *m_halContext;
+
+	DBusConnection *m_dbusConnection;
+	DBusQt::Connection *m_dBusQtConnection;
+
+	QObject *m_parent;
+
+	QString m_swTabletMode;
+};
+
+#endif
--- kdebase/kcontrol/randr/krandrtray.cpp	2005-10-10 17:03:49.000000000 +0200
+++ kdebase/kcontrol/randr/krandrtray.cpp	2007-10-18 12:52:58.000000000 +0200
@@ -229,6 +229,22 @@
 	}
 }
 
+void KRandRSystemTray::slotChangeOrientation(int parameter)
+{
+	int propose = currentScreen()->currentRotation();
+
+	if (parameter & RandRScreen::RotateMask)
+		propose &= RandRScreen::ReflectMask;
+
+	propose ^= parameter;
+
+	if (currentScreen()->currentRotation() == propose)
+		return;
+
+	currentScreen()->proposeRotation(propose);
+	currentScreen()->applyProposed();
+}
+
 void KRandRSystemTray::slotRefreshRateChanged(int parameter)
 {
 	if (currentScreen()->currentRefreshRate() == parameter)
--- kdebase/kcontrol/randr/krandrtray.h	2005-10-10 17:03:49.000000000 +0200
+++ kdebase/kcontrol/randr/krandrtray.h	2007-10-18 12:52:58.000000000 +0200
@@ -43,6 +43,7 @@
 	void slotScreenActivated();
 	void slotResolutionChanged(int parameter);
 	void slotOrientationChanged(int parameter);
+	void slotChangeOrientation(int parameter);
 	void slotRefreshRateChanged(int parameter);
 	void slotPrefs();
 
--- kdebase/kcontrol/randr/Makefile.am	2006-03-17 11:17:17.000000000 +0100
+++ kdebase/kcontrol/randr/Makefile.am	2007-10-18 12:52:58.000000000 +0200
@@ -1,5 +1,3 @@
-AM_CPPFLAGS  = $(all_includes)
-
 lib_LTLIBRARIES = 
 kde_module_LTLIBRARIES = kcm_randr.la
 
@@ -7,13 +5,14 @@
 
 librandrinternal_la_SOURCES = ktimerdialog.cpp randr.cpp
 METASOURCES = AUTO 
+INCLUDES = $(all_includes) $(HAL_INCS) $(DBUS_INCS) $(DBUSQT_INCS)
 
 kcm_randr_la_SOURCES = krandrmodule.cpp
 kcm_randr_la_LDFLAGS = -module -avoid-version $(all_libraries) -no-undefined
 kcm_randr_la_LIBADD = librandrinternal.la $(LIB_KDEUI) $(LIB_XRANDR)
 
 noinst_HEADERS = randr.h krandrmodule.h krandrtray.h krandrapp.h ktimerdialog.h \
-    krandrpassivepopup.h
+    krandrpassivepopup.h krandrdbus.h
 
 xdg_apps_DATA = krandrtray.desktop
 
@@ -28,9 +27,9 @@
 
 bin_PROGRAMS = krandrtray
 
-krandrtray_SOURCES = main.cpp krandrtray.cpp krandrapp.cpp krandrpassivepopup.cpp
+krandrtray_SOURCES = main.cpp krandrtray.cpp krandrdbus.cpp krandrapp.cpp krandrpassivepopup.cpp
 krandrtray_LDFLAGS = $(all_libraries) $(KDE_RPATH)
-krandrtray_LDADD = librandrinternal.la $(LIB_KFILE) $(LIB_KUTILS) $(LIB_XRANDR)
+krandrtray_LDADD = librandrinternal.la $(LIB_KFILE) $(LIB_KUTILS) $(LIB_XRANDR) $(HAL_LIBS) $(DBUS_LIBS) $(DBUSQT_LIBS)
 
 messages: rc.cpp
 	$(XGETTEXT) *.cpp -o $(podir)/krandr.pot
